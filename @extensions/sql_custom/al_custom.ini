; test
[Default]
Version = 1
Strip Chars = "/\|;{}<>'`"
Strip Chars Mode = 1
Input SQF Parser = false

[insertPlant]
SQL1_1 = INSERT INTO plants (classname, position, owner, plantClass, curState, totalState, curGrowKoef, growUp, isWatered, isFertilized) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
SQL1_INPUTS = 1,2,3,4,5,6,7,8,9,10

[loadPlants]
SQL1_1 = SELECT classname, position, owner, plantClass, curState, totalState, curGrowKoef, growUp, isWatered, isFertilized FROM plants
OUTPUT = 1-STRING,2,3-STRING,4-STRING,5,6,7,8,9,10

[deletePlants]
SQL1_1 = DELETE FROM plants

[insertPugalo]
SQL1_1 = INSERT INTO pugalo (owner, classname, pos, date_end) VALUES (?, ?, ?, DATE_ADD(NOW(), INTERVAL ? DAY))
SQL1_INPUTS = 1,2,3,4
SQL2_1 = SELECT DATE_ADD(NOW(), INTERVAL ? DAY)
SQL2_INPUTS = 4
OUTPUT = 1

[loadPugalo]
SQL1_1 = SELECT owner, classname, pos, date_end FROM pugalo
OUTPUT = 1-STRING,2-STRING,3,4

[deletePugalo]
SQL1_1 = DELETE FROM pugalo WHERE date_end < NOW()
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[loadActiveCases]
SQL1_1 = select `case`, `cost`, `currency`, `amount`, `ended_at` from cases WHERE available = 1 and 
SQL1_2 = ended_at > DATE_SUB(NOW(), INTERVAL 1 SECOND) and 
SQL1_3 = available_at < DATE_ADD(NOW(), INTERVAL 1 SECOND)
OUTPUT = 1-STRING,2,3-STRING,4,5

[insertPlayerCase]
SQL1_1 = INSERT INTO player_cases (uid, container, created_at, expired_at) VALUES 
SQL1_2 = (?, ?, NOW(), DATE_ADD(NOW(), INTERVAL ? DAY))
SQL1_INPUTS = 1,2,3
Return InsertID = true

[getCase]
SQL1_1 = SELECT cost, currency, amount FROM cases WHERE `case` = ? and available = 1 and amount > 0 and 
SQL1_2 = ended_at > DATE_SUB(NOW(), INTERVAL 1 SECOND) and 
SQL1_3 = available_at < DATE_ADD(NOW(), INTERVAL 1 SECOND)
SQL1_INPUTS = 1
OUTPUT = 1,2-STRING,3

[loadOwnedCases]
SQL1_1 = SELECT id, container, expired_at FROM player_cases WHERE uid = ? AND opened_at IS NULL AND expired_at > DATE_SUB(NOW(), INTERVAL 1 SECOND)
SQL1_INPUTS = 1
OUTPUT = 1,2-STRING,3

[containerExist]
SQL1_1 = SELECT IF(EXISTS(SELECT `container` FROM player_cases WHERE `id` = ? and
SQL1_2 = `expired_at` > DATE_SUB(NOW(), INTERVAL 1 SECOND) and `opened_at` is null), 'true', 'false')
SQL1_INPUTS = 1
OUTPUT = 1

[setOpenedCase]
SQL1_1 = UPDATE player_cases SET opened_at = NOW(), win_item = ?, item_category = ? WHERE id = ?
SQL1_INPUTS = 1,2,3

[takeCase]
SQL1_1 = UPDATE `cases` SET `amount` = `amount` - 1 WHERE `case` = ? and `amount` > 0
SQL1_INPUTS = 1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[loadCommunityGoals]
SQL1_1 = SELECT community_goals.id, community_goals.config, COALESCE(SUM(community_goals_participants.amount), 0), COUNT(DISTINCT community_goals_participants.uid), community_goals.end_date,
SQL1_2 = (SELECT COALESCE(SUM(amount), 0) FROM community_goals_participants WHERE uid = ? AND goal_id = community_goals.id) FROM community_goals
SQL1_3 = LEFT OUTER JOIN community_goals_participants ON community_goals.id = community_goals_participants.goal_id WHERE community_goals.start_date < NOW() AND finished = 0 GROUP BY community_goals.id
SQL1_INPUTS = 1
OUTPUT = 1, 2-STRING, 3, 4, 5-STRING, 6

[loadCommuntyGoalParticipants]
SQL1_1 = SELECT uid FROM community_goals_participants WHERE goal_id = ? GROUP BY uid ORDER BY SUM(amount) DESC
SQL1_INPUTS = 1
OUTPUT = 1-STRING

[loadCommunityGoalsAndExpired]
SQL1_1 = SELECT community_goals.id, community_goals.config, COALESCE(SUM(community_goals_participants.amount),0), COUNT(DISTINCT community_goals_participants.uid),
SQL1_2 = (CASE WHEN community_goals.end_date < NOW() THEN 'true' ELSE 'false' END) AS expired FROM community_goals
SQL1_3 = LEFT OUTER JOIN community_goals_participants ON community_goals.id = community_goals_participants.goal_id WHERE finished = 0 AND community_goals.start_date < NOW() GROUP BY community_goals.id ORDER BY expired DESC
OUTPUT = 1, 2-STRING, 3, 4, 5

[updateCommunityGoalParticipation]
SQL1_1 = INSERT INTO community_goals_participants (uid, goal_id, amount) VALUES (?, ?, ?) ON DUPLICATE KEY UPDATE amount = amount + ?;
SQL1_INPUTS = 1, 2, 3, 3
OUTPUT = 1

[setCommunityGoalFinished]
SQL1_1 = UPDATE community_goals SET finished = 1 WHERE id = ?
SQL1_INPUTS = 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[insertNewStoreV2]
SQL1_1 = INSERT INTO ltds_stores (object, name, ltd_id, active, level, rent_end, rent_start, discount, discount_end, mode, earned, blacklist, deleted_at, rc_spent, position) 
SQL1_2 = VALUES (?, ?, ?, 1, 1, DATE_ADD(NOW(), INTERVAL 30 DAY), NOW(), 0, null, 1, 0, '[]', null, 0, ?)
SQL1_INPUTS = 1,2,3,4
Return InsertID = true

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[getStatPartyMeat]
SQL1_1 = SELECT lvl,kills,deaths FROM party_meat WHERE pid = ?;
SQL1_INPUTS = 1
OUTPUT = 1,2,3

[isRegPartyMeat]
SQL1_1 = SELECT pid,lvl,kills,deaths,active,deposit FROM party_meat WHERE pid = ?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2,3,4,5-BOOL,6

[updateStats]
SQL1_1 = UPDATE party_meat SET kills = ?, deaths = ?, deposit = ?, lvl = ?  WHERE pid = ?
SQL1_INPUTS = 1,2,3,4,5

[partyMeatStart]
SQL1_1 = UPDATE party_meat SET deposit = ?, active = ? WHERE pid = ?
SQL1_INPUTS = 1,2,3

[partyMeatFinish]
SQL1_1 = UPDATE party_meat SET deposit = 0, active = 0, kills = ?, deaths = ?, lvl = ?  WHERE pid = ?
SQL1_INPUTS = 1,2,3,4

[partyMeatRegAndStart]
SQL1_1 = INSERT INTO party_meat (pid, deposit, active) VALUES (?,?,?)
SQL1_INPUTS = 1,2,3

[addSecretShopItems]
SQL1_1 = INSERT INTO lk_secret_shop_purchased_items (pid, item, date) VALUES (?,?,now())
SQL1_INPUTS = 1,2

[addSecretShopItemsRent]
SQL1_1 = INSERT INTO lk_secret_shop_purchased_items (pid, item, date, end_day) VALUES (?,?,now(), DATE_ADD(NOW(), INTERVAL ? DAY))
SQL1_INPUTS = 1,2,3

[insertBansBackUP]
SQL1_1 = INSERT INTO lk_ban_history (reason, banEnd, playerId) VALUES (?, (SELECT DATE_ADD(NOW(),INTERVAL ? MINUTE)) , ?)
SQL1_INPUTS = 1,2,3

;; REFINERY
[initRefinery]
SQL1_1 =  SELECT * FROM refinery
OUTPUT = 1, 2-STRING, 3-STRING, 4-STRING, 5, 6, 7-STRING, 8-STRING

[refineryUpdateOwner]
SQL1_1 = UPDATE refinery SET owner_name = ?, owner_id = ?, licenseGroup = ? WHERE variable = ?
SQL1_INPUTS = 1, 2, 3, 4

[initRefineryUpdateOil]
SQL1_1 = SELECT variable, owner_id, oil FROM refinery WHERE owner_id != '-1'
OUTPUT = 1-STRING, 2, 3

[refineryUpdateOil]
SQL1_1 = UPDATE refinery SET oil = ? WHERE variable = ?
SQL1_INPUTS = 1, 2


[getVehicleByClassName]
SQL1_1 = SELECT pid, baseprice FROM vehicles WHERE classname = ?
SQL1_INPUTS = 1
OUTPUT = 1-STRING, 2-STRING


[getGroupsRentItems]
SQL1_1 = SELECT item_id, group_id FROM groups_rents
OUTPUT = 1-STRING,2

[getSecretShopItems]
SQL1_1 = SELECT item FROM lk_secret_shop_purchased_items WHERE pid = ?
SQL1_INPUTS = 1
OUTPUT = 1-STRING

[getSecretShopItem]
SQL1_1 = SELECT item FROM lk_secret_shop_purchased_items WHERE pid = ? and item = ?
SQL1_INPUTS = 1,2
OUTPUT = 1-STRING

[deleteVehicleByClassName]
SQL1_1 = DELETE FROM vehicles WHERE classname = ?
SQL1_INPUTS = 1

[loadingIdPagePlayers]
SQL1_1 = SELECT playerid, licenses FROM players WHERE licenses <> '[]' LIMIT ?,?
SQL1_INPUTS = 1,2
OUTPUT = 1-STRING,2

[log]
SQL1_1 = INSERT INTO player_logs (uid, type, log, timestamp) VALUES (?, ?, ?, NOW())
SQL1_INPUTS = 1,2,3

[insertGiftHistory]
SQL1_1 = INSERT INTO gifts_stats SET uid = ?, type = ?, value = ?, time = NOW();
SQL1_INPUTS = 1,2,3

[insertHardware]
SQL1_1 = insert into player_hardwares set
SQL1_2 =  mac = ?,
SQL1_3 =  hwid = ?,
SQL1_4 =  productID = ?,
SQL1_5 =  last_ip = ?,
SQL1_6 =  ip_information = ?,
SQL1_7 =  discord_name = ?,
SQL1_8 =  discord_id = ?,
SQL1_9 =  CPU_ID = ?,
SQL1_10 =  CPU_Name = ?,
SQL1_11 =  MOTHERBOARD = ?,
SQL1_12 =  MOTHERBOARD_ID = ?,
SQL1_13 =  BIOS_ID = ?,
SQL1_14 =  BIOS_DATE = ?,
SQL1_15 =  BIOS_VERSION = ?,
SQL1_16 =  RAM_SERIAL = ?,
SQL1_17 =  RAM_CAPACITY = ?,
SQL1_18 =  RAM_PART = ?,
SQL1_19 =  RAM = ?,
SQL1_20 =  WIN_DATE = ?,
SQL1_21 =  WIN_VERSION = ?,
SQL1_22 =  PC_NAME = ?,
SQL1_23 =  SID = ?,
SQL1_24 =  GPU = ?,
SQL1_25 =  HDD = ?,
SQL1_26 =  FILE_1 = ?,
SQL1_27 =  FILE_2 = ?,
SQL1_28 =  FILE_3 = ?,
SQL1_29 =  FILE_4 = ?,
SQL1_30 =  FILE_5 = ?,
SQL1_31 =  FILE_6 = ?,
SQL1_32 =  uid = ?;
SQL1_INPUTS = 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31

[updatePlayerHardware]
SQL1_1 = update player_hardwares set
SQL1_2 =  mac = ?,
SQL1_3 =  hwid = ?,
SQL1_4 =  productID = ?,
SQL1_5 =  last_ip = ?,
SQL1_6 =  ip_information = ?,
SQL1_7 =  discord_name = ?,
SQL1_8 =  discord_id = ?,
SQL1_9 =  CPU_ID = ?,
SQL1_10 =  CPU_Name = ?,
SQL1_11 =  MOTHERBOARD = ?,
SQL1_12 =  MOTHERBOARD_ID = ?,
SQL1_13 =  BIOS_ID = ?,
SQL1_14 =  BIOS_DATE = ?,
SQL1_15 =  BIOS_VERSION = ?,
SQL1_16 =  RAM_SERIAL = ?,
SQL1_17 =  RAM_CAPACITY = ?,
SQL1_18 =  RAM_PART = ?,
SQL1_19 =  RAM = ?,
SQL1_20 =  WIN_DATE = ?,
SQL1_21 =  WIN_VERSION = ?,
SQL1_22 =  PC_NAME = ?,
SQL1_23 =  SID = ?,
SQL1_24 =  GPU = ?,
SQL1_25 =  HDD = ?,
SQL1_26 =  FILE_1 = ?,
SQL1_27 =  FILE_2 = ?,
SQL1_28 =  FILE_3 = ?,
SQL1_29 =  FILE_4 = ?,
SQL1_30 =  FILE_5 = ?,
SQL1_31 =  FILE_6 = ?
SQL1_32 =  where uid = ?;
SQL1_INPUTS = 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31

[getMultiAccounts]
SQL1_1 = with t as (select * from player_hardwares where uid = ?)
SQL1_2 = SELECT p.uid, p.ban_reason,(select CONCAT(first_name, ' ', last_name) from players where playerid = p.uid) FROM player_hardwares p, t where
SQL1_3 = p.hwid = t.hwid or
SQL1_4 = p.HDD = t.HDD or
SQL1_5 = p.SID = t.SID or
SQL1_6 = (p.discord_id = t.discord_id AND p.discord_id <> 'undefined') or
SQL1_7 = p.SWID = t.SWID or
SQL1_8 = p.WIN_DATE = t.WIN_DATE or
SQL1_9 = p.FILE_1 = t.FILE_1 or
SQL1_10 = p.FILE_2 = t.FILE_2 or
SQL1_11 = p.FILE_3 = t.FILE_3 or
SQL1_12 = p.FILE_4 = t.FILE_4 or
SQL1_13 = p.FILE_5 = t.FILE_5 or
SQL1_14 = p.FILE_6 = t.FILE_6
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2-STRING,3-STRING

[checkBan]
SQL1_1 = SELECT CASE WHEN (
SQL1_2 = with t as (select * from player_hardwares where uid = ?)
SQL1_3 = SELECT p.uid FROM player_hardwares p, t where
SQL1_4 = (p.hwid = t.hwid or
SQL1_5 = p.HDD = t.HDD or
SQL1_6 = p.SID = t.SID or
SQL1_7 = (p.discord_id = t.discord_id AND p.discord_id <> 'undefined') or
SQL1_8 = p.SWID = t.SWID or
SQL1_9 = p.WIN_DATE = t.WIN_DATE or
SQL1_10 = p.FILE_1 = t.FILE_1 or
SQL1_11 = p.FILE_2 = t.FILE_2 or
SQL1_12 = p.FILE_3 = t.FILE_3 or
SQL1_13 = p.FILE_4 = t.FILE_4 or
SQL1_14 = p.FILE_5 = t.FILE_5 or
SQL1_15 = p.FILE_6 = t.FILE_6)
SQL1_16 = and ((t.ban_time > DATE_SUB(NOW(),INTERVAL 1 SECOND)) or (p.ban_time > DATE_SUB(NOW(),INTERVAL 1 SECOND)))
SQL1_17 = LIMIT 1) THEN 'true' ELSE 'false' END;
SQL1_INPUTS = 1
OUTPUT = 1

[buyDocuments]
SQL1_1 = INSERT INTO documents (class, name, stop_date, give_pid, give_name, pid) VALUES (?,?,DATE_ADD(CURRENT_TIMESTAMP, INTERVAL ? HOUR),?,?,?);
SQL1_INPUTS = 1, 2, 3, 4, 5, 6

[addDocuments]
SQL1_1 = INSERT INTO documents (pid, class, name, description, stop_date, give_pid, give_name) VALUES (?,?,?,?,DATE_ADD(CURRENT_TIMESTAMP, INTERVAL ? HOUR),?,?);
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7

[getDocuments]
SQL1_1 = SELECT id, pid, class, name, description, give_name, give_pid, insert_date, stop_date FROM documents WHERE pid = ?;
SQL1_INPUTS = 1
OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6-String, 7-String, 8, 9

[deleteDocuments]
SQL1_1 = DELETE FROM documents WHERE id = ?
SQL1_INPUTS = 1

[removeDocuments]
SQL1_1 = DELETE FROM documents WHERE id = ?;
SQL1_INPUTS = 1
SQL2_1 = SELECT id, pid, class, name, description, give_name, give_pid, insert_date, stop_date FROM documents WHERE pid = ?;
SQL2_INPUTS = 2
OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6-String, 7-String, 8, 9

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Cleaner
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[garbageCollector]
SQL1_1 = DELETE FROM houses WHERE last_pay < DATE_SUB(NOW(), INTERVAL 30 DAY);
SQL2_1 = DELETE FROM houses WHERE owned = '0' OR pos = '[]';
SQL3_1 = DELETE FROM ltds_inventory WHERE trash = '1' AND last_update < DATE_SUB(NOW(), INTERVAL 3 DAY);
SQL4_1 = UPDATE ltds_object SET deleted_at = NOW() WHERE payed_untill < DATE_SUB(NOW(), INTERVAL 1 MINUTE) AND deleted_at IS NULL;
SQL5_1 = DELETE FROM wanteds WHERE active = '1' AND last_update < DATE_SUB(NOW(), INTERVAL 7 DAY);
SQL6_1 = DELETE FROM wanteds WHERE active = '0' AND last_update < DATE_SUB(NOW(), INTERVAL 3 DAY);
SQL7_1 = DELETE FROM lottery_tickets WHERE deleted_at < DATE_SUB(NOW(), INTERVAL 3 DAY);
SQL8_1 = UPDATE ltds_fuelstation SET deleted_at = NOW() WHERE payed_untill < DATE_SUB(NOW(), INTERVAL 1 MINUTE) AND deleted_at IS NULL;
SQL9_1 = DELETE FROM ltds_inventory WHERE selled_in IN (SELECT id FROM ltds_object WHERE deleted_at < DATE_SUB(NOW(), INTERVAL 10 DAY));
SQL10_1 = DELETE FROM ltds_object WHERE deleted_at < DATE_SUB(NOW(), INTERVAL 10 DAY);
SQL11_1 = UPDATE players SET ban_time = NULL, ban_reason = "" WHERE ban_time < DATE_SUB(NOW(), INTERVAL 1 SECOND);
SQL12_1 = DELETE FROM vehicles WHERE deleted_at < DATE_SUB(NOW(), INTERVAL 7 DAY);
SQL13_1 = DELETE FROM gifts WHERE last_give < DATE_SUB(NOW(), INTERVAL 24 HOUR);
SQL14_1 = DELETE FROM messages WHERE time < DATE_SUB(NOW(), INTERVAL 3 HOUR);
SQL15_1 = UPDATE vehicles SET active = '0';
SQL16_1 = UPDATE houses SET active = '0';
SQL17_1 = UPDATE player_settings SET life_firstTime = '1', life_deaths = '0';
SQL18_1 = UPDATE vehicles SET deleted_at = NOW(), why_deleted = "Не оплатил штраф" WHERE parking_time < DATE_SUB(NOW(), INTERVAL 168 HOUR) and deleted_at is null;
SQL19_1 = UPDATE battleveh SET times = '0';
SQL20_1 = UPDATE players SET connected = '0';
SQL21_1 = UPDATE player_hardwares SET ban_time = NULL, ban_reason = "" WHERE ban_time < DATE_SUB(NOW(), INTERVAL 1 SECOND);
SQL22_1 = UPDATE players SET donorlevel = '0', donat_time = null WHERE (donat_time <= CURRENT_DATE) = 1;
SQL23_1 = DELETE FROM gifts WHERE last_give < DATE_SUB(NOW(), INTERVAL 24 HOUR);
SQL24_1 = DELETE FROM `documents` WHERE `stop_date` < NOW() AND `stop_date` IS NOT NULL;
SQL25_1 = DELETE FROM `groups_rents` WHERE `date_end` < NOW();
SQL26_1 = UPDATE players p INNER JOIN party_meat pm SET p.bankacc = p.bankacc + pm.deposit WHERE p.playerid = pm.pid
SQL27_1 = UPDATE party_meat SET active = 0, deposit = 0;
SQL28_1 = DELETE FROM `lk_secret_shop_purchased_items` WHERE `end_day` < NOW() AND `end_day` IS NOT NULL;
; SQL29_1 = UPDATE player_data SET position = '[]';

[policeSalary]
SQL1_1 = UPDATE players 
SQL1_2 = JOIN salarys ON players.playerid = salarys.uid 
SQL1_3 = SET players.bankacc = players.bankacc + salarys.value;
SQL2_1 = DELETE FROM salarys;

[markInsureVehicleDelete]
SQL1_1 = UPDATE vehicles SET alive = '1', active = '0', insure = '2', deleted_at = NOW(), why_deleted = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[markDeleteVehicle]
SQL1_1 = UPDATE vehicles SET alive = '0', active = '0', deleted_at = NOW(), why_deleted = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[createMapObject]
SQL1_1 = INSERT INTO lk_mapObjects SET classname = ?, displayName = ?;
SQL1_INPUTS = 1,2

[loadingIdPageVehicles]
SQL1_1 = SELECT id FROM vehicles LIMIT ?,?;
SQL1_INPUTS = 1,2
OUTPUT = 1

[loadBasePriceVi]
SQL1_1 = SELECT id,classname,pid,baseprice FROM vehicles WHERE id = ?;
SQL1_INPUTS = 1
OUTPUT = 1,2-STRING,3-STRING,4

[deleteVehicle]
SQL1_1 = DELETE FROM vehicles WHERE id = ?;
SQL1_INPUTS = 1

[addToBankPlayer]
SQL1_1 = UPDATE players SET bankacc = (bankacc + ?) WHERE playerid = ?;
SQL1_INPUTS = 1,2

[getAllCars]
SQL1_1 = SELECT id,classname FROM vehicles;
OUTPUT = 1,2-STRING

[setDisplayName]
SQL1_1 = UPDATE vehicles SET displayName = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[selectGUID]
SQL1_1 = SELECT generateGUID(?);
SQL1_INPUTS = 1
OUTPUT = 1-STRING

[getGovInfo]
SQL1_1 = SELECT uid, name FROM rules;
OUTPUT = 1-STRING,2-STRING

[getServerCandidates]
SQL1_1 = SELECT uid,name,invest,policy FROM politics WHERE active='1';
OUTPUT = 1-STRING,2-STRING,3,4-STRING

[deleteVehicleCleanup]
SQL1_1 = UPDATE vehicles SET active='0', deleted_at = NOW() WHERE id = ?;
SQL1_INPUTS = 1

[updateGovInfo]
SQL1_1 = SELECT serverbank, servertax, credittax, mar_legal, slavery, server_poor FROM rules;
OUTPUT = 1-STRING,2,3,4,5,6-STRING

;;
[selectDayName]
SQL1_1 = SELECT DAYNAME(NOW());
OUTPUT = 1-STRING

[loadPagePlayers]
SQL1_1 = SELECT uid FROM players LIMIT ?,?;
SQL1_INPUTS = 1,2
OUTPUT = 1

[selectPlayer]
SQL1_1 = SELECT playerid,ban_time,ban_reason FROM players WHERE uid = ?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2,3-STRING

[transferToHWID]
SQL1_1 = INSERT INTO player_hardwares SET uid = ?, ban_time = ?, ban_reason = ?;
SQL1_INPUTS = 1,2-time,3

;;;;;
[loadNewsFeed]
SQL1_1 = SELECT title, whodoit, link, image, description FROM newsfeed WHERE hasActive = '1' ORDER BY id DESC;
OUTPUT = 1-STRING,2-STRING,3-STRING,4-STRING,5-STRING

[getPlayerHardware]
SQL1_1 = SELECT id FROM player_hardwares WHERE uid = ?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING

[setBan]
SQL1_1 = UPDATE player_hardwares SET ban_inserted = NOW(), ban_reason = ?, ban_time = (SELECT DATE_ADD(NOW(),Interval ? MINUTE)) WHERE uid = ? and ban_time is null;
SQL1_INPUTS = 1,2,3

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; vehicles
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[vehicleAdacRecolor]
SQL1_1 = UPDATE vehicles SET color=? WHERE id = ?;
SQL1_INPUTS = 1,2

[vehicleAdacRematerial]
SQL1_1 = UPDATE vehicles SET material=? WHERE id = ?;
SQL1_INPUTS = 1,2

[vehicleAdacUpdate]
SQL1_1 = UPDATE vehicles SET tuning_data=? WHERE id = ?;
SQL1_INPUTS = 1,2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; gang
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[loadingIdPageGangContainer]
SQL1_1 = SELECT id FROM gangsContainers WHERE slots !='0' AND active='1' LIMIT ?,?
SQL1_INPUTS = 1,2
OUTPUT = 1

[getGangContainers]
SQL1_1 = SELECT class, inventory, trunk, slots, owner, members, color, picture FROM gangsContainers WHERE id = ?
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2,3,4,5-STRING,6,7-STRING,8-STRING

[updateContainerMember]
SQL1_1 = UPDATE gangscontainers SET members = ? WHERE class = ?
SQL1_INPUTS = 1,2

[updateGangTrunks]
SQL1_1 = UPDATE gangsContainers SET trunk = ? WHERE class = ?
SQL1_INPUTS = 1,2

[updateGangInventory]
SQL1_1 = UPDATE gangsContainers SET inventory = ? WHERE class = ?
SQL1_INPUTS = 1,2

[upgradeContainerSlots]
SQL1_1 = UPDATE gangsContainers SET slots = ? WHERE class = ?
SQL1_INPUTS = 1,2

[updateColor]
SQL1_1 = UPDATE gangsContainers SET color = ? WHERE class = ?
SQL1_INPUTS = 1,2

[updatePicture]
SQL1_1 = UPDATE gangsContainers SET picture = ? WHERE class = ?
SQL1_INPUTS = 1,2

[updateGangTrunk]
SQL1_1 = UPDATE gangsContainers SET trunk = ?, inventory = ? WHERE class = ?
SQL1_INPUTS = 1, 2, 3

[gangBoxUpdateTrunk]
SQL1_1 = UPDATE gangsContainers SET trunk = ? WHERE class = ?
SQL1_INPUTS = 1, 2

[gangBoxUpdateInventory]
SQL1_1 = UPDATE gangsContainers SET inventory = ? WHERE class = ?
SQL1_INPUTS = 1, 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; garages
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[changeVehicleServerMap]
SQL1_1 = UPDATE vehicles SET servermap = ?, spname = 'none' WHERE id = ?;
SQL1_INPUTS = 2,1

[chopShopOwn]
SQL1_1 = UPDATE vehicles SET pid = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[chopShopSell]
SQL1_1 = DELETE FROM vehicles WHERE id = ?;
SQL1_INPUTS = 1

[garageVehicleStore]
SQL1_1 = UPDATE vehicles SET active = '0', spname = ?, gear = ?, inventory = ?, fuel = ?, damage = ?, hitpoints = ?, distance = ? WHERE id = ?;
SQL1_INPUTS = 1,2,3,4,5,6,7,8

[selectSpawnVeh]
SQL1_1 = SELECT classname, type, pid, alive, active, insure, plate, color, material, inventory, gear, fuel, damage, hitpoints, tuning_data, spname, baseprice, servermap, distance FROM vehicles WHERE id = ?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2-STRING,3-STRING,4,5,6,7-STRING,8-STRING,9-STRING,10,11,12,13,14,15,16-STRING,17-STRING,18-STRING,19

[setGarage]
SQL1_1 = UPDATE vehicles SET spname = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[getVehiclesGarage]
SQL1_1 = SELECT id, classname, color, spname, tuning_data, insure, baseprice, material, fuel, servermap,parking, plate, distance, damage FROM vehicles WHERE pid=? AND alive='1' AND active='0' AND type=? and deleted_at is null;
SQL1_INPUTS = 1,2
OUTPUT = 1,2-STRING,3-STRING,4-STRING,5,6,7,8-STRING,9,10-STRING,11,12-STRING,13,14

[getVehiclesTransfWSide]
SQL1_1 = SELECT id, classname, pid, alive, active, plate, color, material, spname, tuning_data, baseprice, servermap FROM vehicles WHERE pid=? AND alive='1' AND active='0' AND servermap <> ? and deleted_at is null;
SQL1_INPUTS = 1,2
OUTPUT = 1,2-STRING,3-STRING,4,5,6-STRING,7-STRING,8-STRING,9-STRING,10,11,12-STRING

[getVehiclesParking]
SQL1_1 = SELECT id, classname, plate, parking FROM vehicles WHERE pid=? AND alive='1' AND active='0' AND parking <> '[]' and deleted_at is null
SQL1_INPUTS = 1
OUTPUT = 1,2-STRING,3-STRING,4

[insurancePay]
SQL1_1 = UPDATE vehicles SET alive = '0', insure = '1' WHERE id = ?;
SQL1_INPUTS = 1

[getInsurPay]
SQL1_1 = SELECT baseprice FROM vehicles WHERE id = ?;
SQL1_INPUTS = 1
OUTPUT = 1

[setVehicleActive]
SQL1_1 = UPDATE vehicles SET active = '1' WHERE id = ?
SQL2_1 = UPDATE vehicles SET last_used = NOW() where id = ?
SQL1_INPUTS = 1
SQL2_INPUTS = 1

[vehicleParkingPay]
SQL1_1 = UPDATE vehicles SET parking = '[]', spname = 'car_g_penalty', parking_time = NULL WHERE id = ?
SQL1_INPUTS = 1

[vehicleParkingStore]
SQL1_1 = UPDATE vehicles SET active = '0', parking = ?, parking_time = NOW() WHERE id = ?;
SQL1_INPUTS = 1,2

[vehicleSell]
SQL1_1 = UPDATE vehicles SET alive = '0', deleted_at = NOW(), why_deleted = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[vehicleStore]
SQL1_1 = UPDATE vehicles SET active = '0', inventory = ?, gear = ?, fuel = ? WHERE pid = ? AND plate = ?;
SQL1_INPUTS = 3,4,5,1,2

[vehicleStore2]
SQL1_1 = UPDATE vehicles SET active = '0', inventory = ?, gear = ?, fuel = ?, spname = 'none' WHERE pid = ? AND plate = ?;
SQL1_INPUTS = 3,4,5,1,2

[vehicleStore3]
SQL1_1 = UPDATE vehicles SET active = '0', inventory = ?, gear = ?, fuel = ?, spname = ? WHERE pid = ? AND plate = ?;
SQL1_INPUTS = 3,4,5,6,1,2

[vehicleUpdate]
SQL1_1 = UPDATE vehicles SET gear=?, inventory=? WHERE pid = ? AND plate = ?;
SQL1_INPUTS = 3,4,1,2

[pushNameVehSearch]
SQL1_1 = SELECT name FROM players WHERE playerid = ?
SQL1_INPUTS = 1-STRING
OUTPUT = 1-STRING

[insurVehicle]
SQL1_1 = UPDATE vehicles SET insure = '1' WHERE id = ?;
SQL1_INPUTS = 1

[updateVehicleSlots]
SQL1_1 = UPDATE vehicles SET maxslots = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[updateVehicleClassSlots]
SQL1_1 = UPDATE vehicles SET maxslots = ? WHERE classname = ?;
SQL1_INPUTS = 1,2

[vehicleUpdateTrunk]
SQL1_1 = UPDATE vehicles SET inventory = ? WHERE id = ?;
SQL1_INPUTS = 1,2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; government
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[getGovInfos]
SQL1_1 = SELECT serverbank, servertax, credittax, mar_legal, slavery, server_poor FROM rules
OUTPUT = 1,2,3,4,5,6

[serverBank]
SQL1_1 = UPDATE rules SET serverbank = ?;
SQL1_INPUTS = 1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Housing
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[insertHouse]
SQL1_1 = INSERT INTO houses SET
SQL1_2 = pid = ?,
SQL1_3 = pos = ?,
SQL1_4 = classname = ?,
SQL1_5 = inventory = '[[],0]',
SQL1_6 = trunk = '[[],0]',
SQL1_7 = owned = '1',
SQL1_8 = security = '0',
SQL1_9 = slots = '0',
SQL1_10 = servermap = ?,
SQL1_11 = name_house = ?,
SQL1_12 = neigh = ?,
SQL1_13 = last_pay = NOW()
SQL1_INPUTS = 1,2,3,4,5,6
Return InsertID = true

[checkHouse]
SQL1_1 = SELECT pid FROM houses WHERE owned='1' AND pos = ? AND classname = ?
SQL1_INPUTS = 1,2
OUTPUT = 1-STRING

[fetchPlayerHouse]
SQL1_1 = SELECT pos, classname, servermap FROM houses WHERE (neigh LIKE ? OR pid LIKE ?) AND servermap = ?
SQL1_INPUTS = 1,1,2
OUTPUT = 1,2-STRING,3-STRING

[loadingIdPageHouseContainer]
SQL1_1 = SELECT id FROM houses WHERE owned='1' LIMIT ?,?
SQL1_INPUTS = 1,2
OUTPUT = 1

[getHouseFromID]
SQL1_1 = SELECT houses.id, houses.pid, houses.classname, houses.pos, players.name, houses.neigh, houses.last_pay, houses.name_house, CASE WHEN (SELECT id FROM houses WHERE id = ? AND last_pay < DATE_SUB(NOW(),INTERVAL 21 DAY)) THEN 'true' ELSE 'false' END, houses.security, houses.slots FROM houses INNER JOIN players WHERE id = ? AND houses.pid = players.playerid
SQL1_INPUTS = 1,1
OUTPUT = 1,2-STRING,3-STRING,4,5-STRING,6,7,8-STRING,9,10

[deleteOwnedHouse]
SQL1_1 = DELETE FROM houses WHERE id= ? AND servermap = ?
SQL1_INPUTS = 1,2

[unlockHouseContainer]
SQL1_1 = SELECT trunk, inventory, slots FROM houses WHERE id=? AND active = '0';
SQL1_INPUTS = 1
OUTPUT = 1,2,3

[houseUpdateContainers]
SQL1_1 = UPDATE houses SET trunk=?, inventory=? WHERE pos=? AND classname=?
SQL1_INPUTS = 1, 2, 3, 4

[houseUpdateTrunk]
SQL1_1 = UPDATE houses SET trunk=? WHERE pos=? AND classname=?
SQL1_INPUTS = 1, 2, 3

[houseUpdateInventory]
SQL1_1 = UPDATE houses SET inventory=? WHERE pos=? AND classname=?
SQL1_INPUTS = 1, 2, 3

[updateHouseContainers]
SQL1_1 = UPDATE houses SET inventory=?, trunk=? WHERE owned='1' AND pos=? AND classname=?
SQL1_INPUTS = 3,4,1,2

[updateHouseSlots]
SQL1_1 = UPDATE houses SET slots=? WHERE owned='1' AND pos=? AND classname=?
SQL1_INPUTS = 1,2,3

[updateHouseTrunk]
SQL1_1 = UPDATE houses SET trunk=? WHERE owned='1' AND pos=? AND classname=?
SQL1_INPUTS = 3,1,2

[updateNeighsHouse]
SQL1_1 = UPDATE houses SET neigh = ? WHERE id = ?
SQL1_INPUTS = 1,2

[updateNameHouse]
SQL1_1 = UPDATE houses SET name_house = ? WHERE id = ?
SQL1_INPUTS = 1,2

[updatePayHouse]
SQL1_1 = UPDATE houses SET last_pay = NOW() WHERE id = ?
SQL1_INPUTS = 1

[updateSecurityHouse]
SQL1_1 = UPDATE houses SET security = ? WHERE id = ?
SQL1_INPUTS = 1,2

[setStatusContainer]
SQL1_1 = UPDATE houses SET active = ? WHERE id = ?
SQL1_INPUTS = 1,2

[updateHousePos]
SQL1_1 = UPDATE houses SET pos = ? WHERE id = ?;
SQL1_INPUTS = 1,2

;;____________________________________________________________________________________

[updateJailTime]
SQL1_1 = UPDATE players SET jail_time=? WHERE playerid=?
SQL1_INPUTS = 1,2

;;____________________________________________________________________________________

[cleanupMessages]
SQL1_1 = DELETE FROM messages WHERE toID = ?
SQL1_INPUTS = 1

[createMessages]
SQL1_1 = INSERT INTO messages (fromID, toID, message, fromName, toName) VALUES (?, ?, ?, ?, ?)
SQL1_INPUTS = 1,2,3,4,5

[msgRequest]
SQL1_1 = SELECT fromID, toID, message, fromName, toName FROM messages WHERE toID = ? ORDER BY time DESC
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2-STRING,3-STRING,4-STRING,5-STRING

;;____________________________________________________________________________________

[selectMessageData]
SQL1_1 = SELECT messageData FROM messages_data WHERE playerUid = ?;
SQL1_INPUTS = 1
OUTPUT = 1

[insertMessagesData]
SQL1_1 = INSERT INTO messages_data (playerUid,messageData) VALUES (?,?);
SQL1_INPUTS = 1,2

[updateMessagesData]
SQL1_1 = UPDATE messages_data SET messageData = ? WHERE playerUid = ?;
SQL1_INPUTS = 1,2

[existMessagesData]
SQL1_1 = SELECT CASE
SQL1_2 = WHEN EXISTS(SELECT * FROM messages_data WHERE playerUid = ?)
SQL1_3 = THEN 'true' ELSE 'false'
SQL1_4 = END;
SQL1_INPUTS = 1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; systems
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[changeFractionCIV]
SQL1_1 = UPDATE players SET civlevel='0', coplevel='0', reblevel='1', mediclevel='0' WHERE playerid=?
SQL1_INPUTS = 1

[changeFractionINDEP]
SQL1_1 = UPDATE players SET civlevel='1', coplevel='0', reblevel='0', mediclevel='0' WHERE playerid=?
SQL1_INPUTS = 1

[changePlayerServerMap]
SQL1_1 = UPDATE players SET servermap=? WHERE playerid=?
SQL1_INPUTS = 2,1

[swapVehicleOwner]
SQL1_1 = UPDATE vehicles SET pid=? WHERE id = ?;
SQL1_INPUTS = 1,2

[combatVehGet]
SQL1_1 = SELECT times FROM battleveh WHERE classname = ?;
SQL1_INPUTS = 1

[updateCombatVeh]
SQL1_1 = UPDATE battleveh SET times=times+'1' WHERE classname=?
SQL1_INPUTS = 1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; accountss
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[startAccountSession]
SQL1_1 = UPDATE players SET total_connections = total_connections + 1, last_connected = NOW() WHERE playerid = ?
SQL1_INPUTS = 1

[hasAccount]
SQL1_1 = SELECT CASE WHEN EXISTS(SELECT playerid FROM players WHERE playerid = ?) THEN 'true' ELSE 'false' END
SQL1_INPUTS = 1
OUTPUT = 1

[insertNewPlayer]
SQL1_1 = INSERT INTO players SET
SQL1_2 = playerid = ?,
SQL1_3 = name = ?,
SQL1_4 = cash = '0',
SQL1_5 = bankacc = '100',
SQL1_6 = profs = '[]',
SQL1_7 = GUID = (SELECT generateGUID (?)),
SQL1_8 = total_time = '0',
SQL1_9 = last_connected = NOW(),
SQL1_10 = confirmed = '0'
SQL1_INPUTS = 1,2,1

[insertNewPlayerData]
SQL1_1 = DELETE FROM player_data WHERE uid = ?;
SQL2_1 = INSERT INTO
SQL2_2 = player_data SET
SQL2_3 = uid = ?,
SQL2_4 = uniform = ?,
SQL2_5 = assigned_items = '["ItemMap","ItemCompass","tf_microdagr"]',
SQL2_6 = backpack_items = '[]',
SQL2_7 = backpack_magazines = '[]',
SQL2_8 = backpack_weapons = '[]',
SQL2_9 = handgun_items = '["","","",""]',
SQL2_10 = loaded_magazines = '[]',
SQL2_11 = primary_weapon_items = '["","","",""]',
SQL2_12 = secondary_weapon_items = '["","","",""]',
SQL2_13 = uniform_items = '[]',
SQL2_14 = uniform_magazines = '[]',
SQL2_15 = uniform_weapons = '[]',
SQL2_16 = vest_items = '[]',
SQL2_17 = vest_magazines = '[]',
SQL2_18 = vest_weapons = '[]',
SQL2_19 = trunk = '[]',
SQL2_20 = position = '[]'
SQL1_INPUTS = 1
SQL2_INPUTS = 1,2

[updatePosition]
SQL1_1 = UPDATE player_data SET position = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[updateTrunkPlayer]
SQL1_1 = UPDATE player_data SET trunk = ? WHERE uid = ?;
SQL1_INPUTS = 1,2

[updatePlayer]
SQL1_1 = UPDATE player_data SET
SQL1_2 = assigned_items = ?,
SQL1_3 = backpack = ?,
SQL1_4 = backpack_items = ?,
SQL1_5 = backpack_magazines = ?,
SQL1_6 = backpack_weapons = ?,
SQL1_7 = current_weapon = ?,
SQL1_8 = goggles = ?,
SQL1_9 = handgun_items = ?,
SQL1_10 = handgun_weapon = ?,
SQL1_11 = headgear = ?,
SQL1_12 = binocular = ?,
SQL1_13 = loaded_magazines = ?,
SQL1_14 = primary_weapon = ?,
SQL1_15 = primary_weapon_items = ?,
SQL1_16 = secondary_weapon = ?,
SQL1_17 = secondary_weapon_items = ?,
SQL1_18 = uniform = ?,
SQL1_19 = uniform_items = ?,
SQL1_20 = uniform_magazines = ?,
SQL1_21 = uniform_weapons = ?,
SQL1_22 = vest = ?,
SQL1_23 = vest_items = ?,
SQL1_24 = vest_magazines = ?,
SQL1_25 = vest_weapons = ?,
SQL1_26 = trunk = ?,
SQL1_27 = position = ?
SQL1_28 = WHERE uid = ?;
SQL1_INPUTS = 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27

[loadPlayerData]
SQL1_1 = SELECT
SQL1_2 = id,
SQL1_3 = assigned_items,
SQL1_4 = backpack,
SQL1_5 = backpack_items,
SQL1_6 = backpack_magazines,
SQL1_7 = backpack_weapons,
SQL1_8 = current_weapon,
SQL1_9 = goggles,
SQL1_10 = handgun_items,
SQL1_11 = handgun_weapon,
SQL1_12 = headgear,
SQL1_13 = binocular,
SQL1_14 = loaded_magazines,
SQL1_15 = primary_weapon,
SQL1_16 = primary_weapon_items,
SQL1_17 = secondary_weapon,
SQL1_18 = secondary_weapon_items,
SQL1_19 = uniform,
SQL1_20 = uniform_items,
SQL1_21 = uniform_magazines,
SQL1_22 = uniform_weapons,
SQL1_23 = vest,
SQL1_24 = vest_items,
SQL1_25 = vest_magazines,
SQL1_26 = vest_weapons,
SQL1_27 = trunk,
SQL1_28 = position, hunger, thirst, drug_light, drug_hard, sickness, diarhea
SQL1_29 = FROM player_data
SQL1_30 = WHERE uid = ?
SQL1_INPUTS = 1
OUTPUT = 1,2,3-STRING,4,5,6,7-STRING,8-STRING,9,10-STRING,11-STRING,12-STRING,13,14-STRING,15,16-STRING,17,18-STRING,19,20,21,22-STRING,23,24,25,26,27,28,29,30-bool,31,32-bool,33-bool

[deletePlayerData]
SQL1_1 = DELETE FROM player_data WHERE uid = ?
SQL1_INPUTS = 1

[updatePlayerStats]
SQL1_1 = UPDATE player_data SET position = ?, hunger = ?, thirst = ?, drug_hard = ?, sickness = ?, diarhea = ? WHERE uid = ?;
SQL1_INPUTS = 1,2,3,4,5-bool,6-bool,7

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;VEHICLE
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[insertVehicle]
SQL1_1 = INSERT INTO vehicles SET
SQL1_2 = servermap = 'RRpMap',
SQL1_3 = classname = ?,
SQL1_4 = type = ?,
SQL1_5 = pid = ?,
SQL1_6 = alive = '1',
SQL1_7 = active = ?,
SQL1_8 = inventory = '[[],0]',
SQL1_9 = color = ?,
SQL1_10 = plate = ?,
SQL1_11 = gear = '[]',
SQL1_12 = damage = '0',
SQL1_13 = hitpoints = '[]',
SQL1_14 = baseprice = ?,
SQL1_15 = spname = 'none',
SQL1_16 = material = ?,
SQL1_17 = parking = '[]',
SQL1_18 = maxslots = ?,
SQL1_19 = tuning_data = '[]',
SQL1_20 = distance = '0',
SQL1_21 = deleted_at = NULL,
SQL1_22 = comment = '',
SQL1_23 = last_used = NOW()
SQL1_INPUTS = 1,2,3,4,5,6,7,8,9
Return InsertID = true

[updateMoney]
SQL1_1 = UPDATE players SET cash = ?, bankacc = ?, EPoint = ?, dcash = ?, trx = ? WHERE playerid = ?
SQL1_INPUTS = 1,2,3,4,5,6

[updateVehicles]
SQL1_1 = UPDATE vehicles SET gear = ?, inventory = ?, fuel = ?, damage = ?, hitpoints = ?, distance = ? WHERE id = ?
SQL1_INPUTS = 1,2,3,4,5,6,7

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; updates
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[updaPart2]
SQL1_1 = UPDATE players SET licenses=? WHERE playerid=?
SQL1_INPUTS = 1,2

[updaPart4]
SQL1_1 = UPDATE players SET connected=? WHERE playerid=?
SQL1_INPUTS = 1,2

[updaPart5]
SQL1_1 = UPDATE players SET arrested=?, jail_time=? WHERE playerid=?
SQL1_INPUTS = 1,2,3

[updaPart8]
SQL1_1 = UPDATE players SET slave=? WHERE playerid=?
SQL1_INPUTS = 1,2

[updaPart13]
SQL1_1 = UPDATE players SET civlevel=? WHERE playerid=?
SQL1_INPUTS = 1,2

[updaPart14]
SQL1_1 = UPDATE players SET reblevel=? WHERE playerid=?
SQL1_INPUTS = 1,2

[updaPart15]
SQL1_1 = UPDATE players SET first_time = ? WHERE playerid = ?
SQL1_INPUTS = 1-bool,2

[updaPart17]
SQL1_1 = UPDATE players SET coplevel=? WHERE playerid=?
SQL1_INPUTS = 1,2

[updaPart19]
SQL1_1 = UPDATE players SET mediclevel=? WHERE playerid=?
SQL1_INPUTS = 1,2

[updaPart20]
SQL1_1 = UPDATE players SET gear=? WHERE playerid=?
SQL1_INPUTS = 1,2

[updaPart21]
SQL1_1 = UPDATE players SET connected=? WHERE playerid=?
SQL1_INPUTS = 1,2

[updaPart22]
SQL1_1 = UPDATE players SET indicators=?, config=? WHERE playerid=?
SQL1_INPUTS = 1,2,3

[updaPart23]
SQL1_1 = UPDATE players SET EPoint = ? WHERE playerid = ?
SQL1_INPUTS = 1,2

[updaPart24]
SQL1_1 = UPDATE players SET reblevelCom = ? WHERE playerid = ?
SQL1_INPUTS = 1,2

[updaPart25]
SQL1_1 = UPDATE players SET jail_coin = ? WHERE playerid = ?
SQL1_INPUTS = 1,2

[updateRequest]
SQL1_1 = UPDATE players SET licenses=? WHERE playerid=?
SQL1_INPUTS = 2,1

[updateRequest_rules]
SQL1_1 = UPDATE rules SET serverbank = serverbank + ?
SQL1_INPUTS = 1

[clientDisconnect]
SQL1_1 = UPDATE players SET connected = '0', last_disconnect = NOW() WHERE playerid = ?
SQL1_INPUTS = 1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;VIP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[BuyForRcredits]
SQL1_1 = INSERT INTO buyforrcredits SET
SQL1_2 = buyableitem = ?,
SQL1_3 = rcreditsprise = ?,
SQL1_4 = playeruid = ?,
SQL1_5 = rub = ?,
SQL1_6 = item = ?,
SQL1_7 = typebuy = ?
SQL1_INPUTS = 1,2,3,4,5,6

[updatePlate]
SQL1_1 = UPDATE vehicles SET plate = ? WHERE id = ?;
SQL1_INPUTS = 1,2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;LTDs
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[regLtd]
SQL1_1 = INSERT INTO ltds SET
SQL1_2 = owner = ?,
SQL1_3 = name = ?,
SQL1_4 = bank = '0'
SQL1_INPUTS = 1,2
Return InsertID = true

[setAccountLTDLink]
SQL1_1 = UPDATE players SET ltd_id = ? WHERE playerid = ?
SQL1_INPUTS = 1,2

[loadingIdPageLtdsObject]
SQL1_1 = SELECT id FROM ltds_object WHERE deleted_at IS NULL LIMIT ?,?
SQL1_INPUTS = 1,2
OUTPUT = 1

[loadingIdPageLtdsData]
SQL1_1 = SELECT id,owner,name,bank FROM ltds LIMIT ?,?
SQL1_INPUTS = 1,2
OUTPUT = 1,2-STRING,3-STRING,4-STRING

[loadLTD]
SQL1_1 = SELECT id,name,tax,ltd_id,active,license,object,position,vector_dir,vector_up,payed_untill,max_items,discount,discount_untill,mode,blacklist FROM ltds_object WHERE id = ? AND deleted_at IS NULL
SQL1_INPUTS = 1
OUTPUT = 1,2-STRING,3,4,5,6-STRING,7-STRING,8,9,10,11,12,13,14,15,16

[loadLTDData]
SQL1_1 = SELECT id,owner,name,bank FROM ltds WHERE id = ?
SQL1_INPUTS = 1
OUTPUT = 1,2-STRING,3-STRING,4-STRING

[queryLTD]
SQL1_1 = SELECT ltd_id FROM players WHERE playerid = ?
SQL1_INPUTS = 1
OUTPUT = 1

[deleteLTD]
SQL1_1 = DELETE FROM ltds WHERE id = ?
SQL1_INPUTS = 1
SQL2_1 = DELETE FROM ltds_inventory WHERE selled_in = ?
SQL2_INPUTS = 1

[deleteOldGoods]
SQL1_1 = UPDATE ltds_inventory INNER JOIN ltds_object SET ltds_inventory.last_update = NOW() WHERE ltds_object.active = 0
SQL2_1 = DELETE FROM ltds_inventory WHERE last_update < DATE_SUB(NOW(), INTERVAL 7 DAY)

[getGoodsInLTD]
SQL1_1 = SELECT id,item,count,cost,tax,selled_in,selled_by,trash FROM ltds_inventory WHERE selled_in = ?
SQL1_INPUTS = 1
OUTPUT = 1,2-STRING,3,4,5,6,7,8-bool

[updateStoreName]
SQL1_1 = UPDATE ltds_object SET name = ? WHERE id = ?
SQL1_INPUTS = 1,2

[updateStoreTax]
SQL1_1 = UPDATE ltds_object SET tax = ? WHERE id = ?
SQL1_INPUTS = 1,2

[updateStoreDiscount]
SQL1_1 = UPDATE ltds_object SET discount = ?, discount_untill = DATE_ADD(NOW(), INTERVAL ? DAY) WHERE id = ?
SQL1_INPUTS = 1,2,3

[deleteOldDiscounts]
SQL1_1 = UPDATE ltds_object SET discount_untill = NULL, discount = '0' WHERE discount_untill < DATE_SUB(NOW(), INTERVAL 1 SECOND)

[updateActiveStore]
SQL1_1 = UPDATE ltds_object SET active = ? WHERE id = ?
SQL1_INPUTS = 1,2

[updateModeStore]
SQL1_1 = UPDATE ltds_object SET mode = ? WHERE id = ?
SQL1_INPUTS = 1,2

[updateAddDaysStore]
SQL1_1 = UPDATE ltds_object SET payed_untill = DATE_ADD(payed_untill, INTERVAL 30 DAY) WHERE id = ?
SQL1_INPUTS = 1

[updateAddSlotsStore]
SQL1_1 = UPDATE ltds_object SET max_items = max_items + '5' WHERE id = ?
SQL1_INPUTS = 1

[deleteStore]
SQL1_1 = DELETE FROM ltds_object WHERE id = ?
SQL1_INPUTS = 1
SQL2_1 = DELETE FROM ltds_inventory WHERE selled_in = ?
SQL2_INPUTS = 1

[withdrawMoneyFromLTD]
SQL1_1 = UPDATE ltds SET bank = '0' WHERE id = ?
SQL1_INPUTS = 1

[deleteAllLtdData]
SQL1_1 = DELETE FROM ltds WHERE id = ?
SQL1_INPUTS = 1
SQL2_1 = DELETE FROM ltds_object WHERE ltd_id = ?
SQL2_INPUTS = 1
SQL3_1 = DELETE FROM ltds_inventory WHERE selled_in = ?
SQL3_INPUTS = 1
SQL4_1 = UPDATE players SET ltd_id = NULL WHERE ltd_id = ?
SQL4_INPUTS = 1

[getLTDsMembers]
SQL1_1 = SELECT name,playerid FROM players WHERE ltd_id = ?
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2-STRING

[invitedLTDsMember]
SQL1_1 = UPDATE players SET ltd_id = ? WHERE playerid = ?
SQL1_INPUTS = 1,2

[kickLTDsMember]
SQL1_1 = UPDATE players SET ltd_id = NULL WHERE playerid = ?
SQL1_INPUTS = 1

[setNewLeader]
SQL1_1 = UPDATE ltds SET owner = ? WHERE id = ?
SQL1_INPUTS = 1,2

[insertNewStore]
SQL1_1 = INSERT INTO ltds_object SET
SQL1_2 = name = ?,
SQL1_3 = tax = '3',
SQL1_4 = ltd_id = ?,
SQL1_5 = active = '1',
SQL1_6 = license = ?,
SQL1_7 = max_items = '20',
SQL1_8 = object = ?,
SQL1_9 = position = ?,
SQL1_10 = vector_dir = ?,
SQL1_11 = vector_up = ?,
SQL1_12 = payed_untill = DATE_ADD(NOW(), INTERVAL 30 DAY),
SQL1_13 = discount = '0',
SQL1_14 = mode = '1',
SQL1_15 = blacklist = '[]'
SQL1_INPUTS = 1,2,3,4,5,6,7
Return InsertID = true

[deleteLTDitem]
SQL1_1 = DELETE FROM ltds_inventory WHERE id = ?
SQL1_INPUTS = 1

[updateLtdItem]
SQL1_1 = UPDATE ltds_inventory SET count = ? WHERE id = ?
SQL1_INPUTS = 1,2

[addItemToStore]
SQL1_1 = INSERT INTO ltds_inventory SET
SQL1_2 = item = ?,
SQL1_3 = count = ?,
SQL1_4 = cost = ?,
SQL1_5 = tax = ?,
SQL1_6 = selled_in = ?,
SQL1_7 = selled_by = ?,
SQL1_8 = last_update = NOW()
SQL1_INPUTS = 1,2,3,4,5,6
Return InsertID = true

[updateLTDbank]
SQL1_1 = UPDATE ltds SET bank = ? WHERE id = ?
SQL1_INPUTS = 1,2
SQL2_1 = UPDATE ltds SET bank = ? WHERE id = ?
SQL2_INPUTS = 3,4
SQL3_1 = UPDATE ltds_object SET total_earned = (total_earned + ?) WHERE id = ?
SQL3_INPUTS = 5,6

[updateTrashItem]
SQL1_1 = UPDATE ltds_inventory SET trash = ? WHERE id = ?
SQL1_INPUTS = 1,2

[updateBlacklist]
SQL1_1 = UPDATE ltds_object SET blacklist = ? WHERE id = ?;
SQL1_INPUTS = 1,2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;Ltd fuelstations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[insertNewFuel]
SQL1_1 = INSERT INTO ltds_fuelstation SET
SQL1_2 = name = ?,
SQL1_3 = classname = ?,
SQL1_4 = position = ?,
SQL1_5 = ltd_owner = ?,
SQL1_6 = bank = '0',
SQL1_7 = level = '1',
SQL1_8 = fuel_trunk = '0',
SQL1_9 = fuel_buy = '0',
SQL1_10 = fuel_sell = '0',
SQL1_11 = fuel_type = ?,
SQL1_12 = whitelist = '[]',
SQL1_13 = payed_untill = DATE_ADD(NOW(), INTERVAL 30 DAY)
SQL1_INPUTS = 1,2,3,4,5
Return InsertID = true

[updateFuelWhitelist]
SQL1_1 = UPDATE ltds_fuelstation SET whitelist = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[updateFuelBank]
SQL1_1 = UPDATE ltds_fuelstation SET bank = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[updateFuelName]
SQL1_1 = UPDATE ltds_fuelstation SET name = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[updateFuelTrunk]
SQL1_1 = UPDATE ltds_fuelstation SET fuel_trunk = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[updateFuelLevel]
SQL1_1 = UPDATE ltds_fuelstation SET level = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[updateFuelBuy]
SQL1_1 = UPDATE ltds_fuelstation SET fuel_buy = ? WHERE id = ?;
SQL1_INPUTS = 1

[updateFuelSellPrice]
SQL1_1 = UPDATE ltds_fuelstation SET fuel_sell = ? WHERE id = ?;
SQL1_INPUTS = 1

[updatePayDate]
SQL1_1 = UPDATE ltds_fuelstation SET payed_untill = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[updateFuelPayed]
SQL1_1 = UPDATE ltds_fuelstation SET payed_untill = DATE_ADD(payed_untill, INTERVAL 30 DAY) WHERE id = ?;
SQL1_INPUTS = 1

[deleteMarkedFuel]
SQL1_1 = DELETE FROM ltds_fuelstation WHERE deleted_at < DATE_SUB(NOW(), INTERVAL 10 DAY);

[loadingIdPageLtdsFuelData]
SQL1_1 = SELECT id FROM ltds_fuelstation LIMIT ?,?
SQL1_INPUTS = 1,2
OUTPUT = 1

[loadLTDFuelstation]
SQL1_1 = SELECT id, name, classname, position, ltd_owner, bank, level, fuel_trunk, fuel_buy, fuel_sell, fuel_type, whitelist, payed_untill FROM ltds_fuelstation WHERE id = ? AND deleted_at IS NULL
SQL1_INPUTS = 1
OUTPUT = 1,2-STRING,3-STRING,4,5,6-STRING,7,8-STRING,9-STRING,10-STRING,11-STRING,12,13

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[copDB_findID]
SQL1_1 = SELECT players.uid, CONCAT(players.first_name, ' ', players.last_name), players.bankacc, players.side, players.arrested, players.jail_time, (select groups.name from groups where groups.id = players.group_id ) FROM players WHERE players.uid = ?;
SQL1_INPUTS = 1
OUTPUT = 1,2-STRING,3-STRING,4-STRING,5,6,7-STRING

[copDB_findWantedID]
SQL1_1 = SELECT wanteds.id, wanteds.crime,  wanteds.active FROM wanteds INNER JOIN players WHERE players.uid = ? AND wanteds.uid = players.playerid ORDER BY active DESC;
SQL1_INPUTS = 1
OUTPUT = 1,2-STRING,3-bool

[copDB_findCarsID]
SQL1_1 = SELECT vehicles.classname,vehicles.plate FROM vehicles INNER JOIN players WHERE players.uid = ? AND vehicles.pid = players.playerid;
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2-STRING

[copDB_findHouseID]
SQL1_1 = SELECT houses.name_house,houses.classname FROM houses INNER JOIN players WHERE players.uid = ? AND houses.pid = players.playerid;
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2-STRING

[copDB_setActiveCrime]
SQL1_1 = UPDATE wanteds SET active = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[copDB_setActiveCrimeAll]
SQL1_1 = UPDATE wanteds,players SET wanteds.active = '0' WHERE players.uid = ? AND wanteds.uid = players.playerid
SQL1_INPUTS = 1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[copDB_findCars]
SQL1_1 = SELECT classname, plate FROM vehicles INNER JOIN players WHERE players.uid = ? AND vehicles.pid = players.playerid;
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2-STRING

[copDB_findCar]
SQL1_1 = SELECT
SQL1_2 = v.classname,
SQL1_3 = v.type,
SQL1_4 = v.plate,
SQL1_5 = v.insure,
SQL1_6 = v.color,
SQL1_7 = v.material,
SQL1_8 = v.tuning_data,
SQL1_9 = v.parking,
SQL1_10 = v.servermap,
SQL1_11 = CONCAT(p.first_name, ' ', p.last_name)
SQL1_12 = FROM vehicles v
SQL1_13 = INNER JOIN players p
SQL1_14 = ON p.playerid = v.pid
SQL1_15 = WHERE plate = ?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2-STRING,3-STRING,4,5-STRING,6-STRING,7,8,9-STRING,10-STRING

; UPDATE players as p INNER JOIN vehicles as v ON p.playerid = v.pid SET p.bankacc = (p.bankacc + v.baseprice) where v.classname = 'RRPVehicle_pajero_Phoenix';
; DELETE FROM vehicles WHERE classname = 'RRPVehicle_pajero_Phoenix';

[insertWanted]
SQL1_1 = INSERT INTO wanteds (uid, crime, active) VALUES (?, ?, '1');
SQL1_INPUTS = 1,2

[wantedPerson]
SQL1_1 = SELECT id,crime FROM wanteds WHERE uid = ? AND active = '1' ORDER BY active DESC;
SQL1_INPUTS = 1
OUTPUT = 1,2-STRING

[WantedRemove]
SQL1_1 = UPDATE wanteds SET active = '0' WHERE uid = ? AND active = '1';
SQL1_INPUTS = 1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;Gifts Drop
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[getGiftsList]
SQL1_1 = SELECT id FROM gifts_drop WHERE activated = ''
OUTPUT = 1

[activateGift]
SQL1_1 = UPDATE gifts_drop SET activated = ? WHERE id = ?
SQL1_INPUTS = 1,2

[getGift]
SQL1_1 = SELECT gift_type, gift FROM gifts_drop WHERE id = ?
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2-STRING


[insertGift]
SQL1_1 = INSERT INTO gifts SET
SQL1_2 = uid = ?,
SQL1_3 = name = ?,
SQL1_4 = last_give = NOW();
SQL1_INPUTS = 1,2
Return InsertID = true

[checkGift]
SQL1_1 = SELECT CASE WHEN (SELECT id FROM gifts WHERE uid = ? AND last_give > DATE_SUB(NOW(),INTERVAL 24 HOUR)) THEN 'true' ELSE 'false' END
SQL1_INPUTS = 1
OUTPUT = 1

[insertGiftVehicle]
SQL1_1 = INSERT INTO vehicles SET
SQL1_2 = servermap = 'RRpMap',
SQL1_3 = classname = ?,
SQL1_4 = type = ?,
SQL1_5 = pid = ?,
SQL1_6 = alive = '1',
SQL1_7 = active = '0',
SQL1_8 = inventory = '[[],0]',
SQL1_9 = color = ?,
SQL1_10 = plate = ?,
SQL1_11 = gear = '[]',
SQL1_12 = damage = '0',
SQL1_13 = hitpoints = '[]',
SQL1_14 = baseprice = ?,
SQL1_15 = spname = 'none',
SQL1_16 = material = ?,
SQL1_17 = parking = '[]',
SQL1_18 = maxslots = ?,
SQL1_19 = tuning_data = '[]',
SQL1_20 = distance = '0',
SQL1_21 = deleted_at = NULL,
SQL1_22 = comment = '',
SQL1_23 = last_used = NOW()
SQL1_INPUTS = 1,2,3,4,5,6,7,8
Return InsertID = true

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Slots
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[loadingIdPageSlots]
SQL1_1 = SELECT id FROM ltds_slots LIMIT ?,?;
SQL1_INPUTS = 1,2
OUTPUT = 1

; [loadLtdSlots]
; SQL1_1 = SELECT name, object, ltd_id, bank, bank_limit, texture, locked, payed_until FROM ltds_slots WHERE id = ?;
; SQL1_INPUTS = 1
; OUTPUT = 1-STRING,2-STRING,3,4,5,6-STRING,7-bool,8

; [loadLtdSlots]
; SQL1_1 = SELECT name, object, ltd_id, bank, bank_limit, texture, locked, payed_until FROM ltds_slots WHERE id = ?;
; SQL1_INPUTS = 1
; OUTPUT = 1-STRING,2-STRING,3,4,5,6-STRING,7-bool,8

[loadLtdSlots]
SQL1_1 = SELECT name,object,ltd_id,bank,bank_limit,currency FROM ltds_slots WHERE id = ?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2-STRING,3,4,5,6-STRING

[insertSlotAnalytics]
SQL1_1 = INSERT INTO ltds_slots_analytics SET slot_name = ?, slot_id = ?, amount = ?, type = ?, currency = ?;
SQL1_INPUTS = 1,2,3,4,5

[updateSlotBankLimit]
SQL1_1 = UPDATE ltds_slots SET bank_limit = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[updateSlotBank]
SQL1_1 = UPDATE ltds_slots SET bank = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[updateSlotName]
SQL1_1 = UPDATE ltds_slots SET name = ? WHERE id = ?;
SQL1_INPUTS = 1,2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Lottery
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[insertLotteryTicket]
SQL1_1 = INSERT INTO lottery_tickets (pid, name, code) VALUES(?,?,?);
SQL1_INPUTS = 1,2,3

[dropAllTickets]
SQL1_1 = update lottery_tickets set deleted_at = NULL WHERE deleted_at is null;

[insertGeneratedTicket]
SQL1_1 = INSERT INTO lottery_all_tickets (code,winners,created_at) VALUES(?,?,NOW());
SQL1_INPUTS = 1,2

[getAllTickets]
SQL1_1 = SELECT pid, code FROM lottery_tickets WHERE deleted_at IS NULL;
OUTPUT = 1-STRING,2-STRING

[getLotteryJackpot]
SQL1_1 = SELECT value FROM lottery_info WHERE name='lottery_jackpot';
OUTPUT = 1

[getLotteryLvlTick]
SQL1_1 = SELECT value FROM lottery_info WHERE name <> 'lottery_jackpot';
OUTPUT = 1

[updateJackpot]
SQL1_1 = UPDATE lottery_info SET value = ? WHERE name='lottery_jackpot';
SQL1_INPUTS = 1

[setLotteryWin]
SQL1_1 = UPDATE players SET lottery_win= lottery_win + ? WHERE playerid = ?;
SQL1_INPUTS = 1,2

[lottery_win]
SQL1_1 = SELECT lottery_win FROM players WHERE playerid=?;
SQL1_INPUTS = 1
OUTPUT = 1

[lotterydelwin]
SQL1_1 = UPDATE players SET lottery_win= 0;

[dropWinLottery]
SQL1_1 = UPDATE players SET lottery_win='0' WHERE playerid=?;
SQL1_INPUTS = 1

[lotterydeltickets]
SQL1_1 = UPDATE lottery_tickets SET deleted_at= NOW() WHERE deleted_at is null;

[replaceItemsDB]
SQL1_1 = UPDATE gangscontainers SET inventory = REPLACE (  inventory,  ?,?);
SQL1_2 = UPDATE houses SET inventory = REPLACE (  inventory,  ?,?);
SQL1_3 = UPDATE player_data SET assigned_items = REPLACE (  assigned_items,  ?,?);
SQL1_4 = UPDATE player_data SET backpack_items = REPLACE (  backpack_items,  ?,?);
SQL1_5 = UPDATE player_data SET backpack_magazines = REPLACE (  backpack_magazines,  ?,?);
SQL1_6 = UPDATE player_data SET backpack_weapons = REPLACE (  backpack_weapons,  ?,?);
SQL1_7 = UPDATE player_data SET current_weapon = REPLACE (  current_weapon,  ?,?);
SQL1_8 = UPDATE player_data SET handgun_items = REPLACE (  handgun_items,  ?,?);
SQL1_9 = UPDATE player_data SET handgun_weapon = REPLACE (  handgun_weapon,  ?,?);
SQL1_10 = UPDATE player_data SET headgear = REPLACE (  headgear,  ?,?);
SQL1_11 = UPDATE player_data SET loaded_magazines = REPLACE (  loaded_magazines,  ?,?);
SQL1_12 = UPDATE player_data SET primary_weapon = REPLACE (  primary_weapon,  ?,?);
SQL1_13 = UPDATE player_data SET primary_weapon_items = REPLACE (  primary_weapon_items,  ?,?);
SQL1_14 = UPDATE player_data SET secondary_weapon_items = REPLACE (  secondary_weapon_items,  ?,?);
SQL1_15 = UPDATE player_data SET uniform_items = REPLACE (  uniform_items,  ?,?);
SQL1_16 = UPDATE player_data SET uniform_magazines = REPLACE (  uniform_magazines,  ?,?);
SQL1_17 = UPDATE player_data SET uniform_weapons = REPLACE (  uniform_weapons,  ?,?);
SQL1_18 = UPDATE player_data SET vest_items = REPLACE (  vest_items,  ?,?);
SQL1_19 = UPDATE player_data SET vest_magazines = REPLACE (  vest_magazines,  ?,?);
SQL1_20 = UPDATE player_data SET vest_weapons = REPLACE (  vest_weapons,  ?,?);
SQL1_21 = UPDATE vehicles SET inventory = REPLACE (  inventory,  ?,?);
SQL1_22 = UPDATE vehicles SET classname = ? WHERE classname = ?;
SQL1_INPUTS = 1,2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Salary
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[insertSalary]
SQL1_1 = INSERT INTO salarys SET uid = ?, value = ?, insert_time = NOW();
SQL1_INPUTS = 1,2

[getSalary]
SQL1_1 = SELECT value FROM salarys WHERE uid = ?;
SQL1_INPUTS = 1
OUTPUT = 1

[deleteSalary]
SQL1_1 = DELETE FROM salarys WHERE uid = ?;
SQL1_INPUTS = 1

;;
;;Beginner
;;

[setBeginner]
SQL1_1 = UPDATE players SET notBeginner = '1' WHERE playerid = ?;
SQL1_INPUTS = 1

[getBeginner]
SQL1_1 = SELECT notBeginner FROM players WHERE playerid = ?;
SQL1_INPUTS = 1
OUTPUT = 1-bool

[updateSkill]
SQL1_1 = UPDATE players SET profs=? WHERE playerid=?;
SQL1_INPUTS = 1,2

[deleteLogs]
SQL1_1 = DELETE FROM performance_log WHERE timestamp < DATE_SUB(NOW(), INTERVAL 5 DAY);

[generatePromocode]
SQL1_1 = INSERT INTO lk_promocodes SET code = ?, type = ?, value = ?, endedAt = DATE_ADD(NOW(), INTERVAL ? DAY), count = ?, createdBy = ?;
SQL1_INPUTS = 1,2,3,4,5,6

[loadProfs]
SQL1_1 = SELECT civ_prof, reb_prof,profs FROM players WHERE uid = ?;
SQL1_INPUTS = 1
OUTPUT = 1,2,3

[updateProf]
SQL1_1 = UPDATE players SET profs = ? WHERE uid = ?;
SQL1_INPUTS = 1,2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Economy v3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[loadEconomyV3]
SQL1_1 = SELECT resource_name, JSON_ARRAY(localize, price, max_price, min_price, down_price_perItem, random_max, random_min, illegal, influenced) FROM economy 
OUTPUT = 1-STRING,2

[updateEconomyPriceV3]
SQL1_1 = UPDATE economy SET price = ? where resource_name = ?
SQL1_INPUTS = 1,2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Economy v2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[loadingIdPageEconomy]
SQL1_1 = SELECT id FROM economyv2 WHERE sellprice > 0 LIMIT ?,?
SQL1_INPUTS = 1,2
OUTPUT = 1

[loadEconomy]
SQL1_1 = SELECT resource, localize, sellprice, selled, max_selled, legal, prem, locked_time, locked_until, lastprice FROM economyv2;
OUTPUT = 1-STRING,1-STRING,2,3,4,5-bool,6-bool,7,8,9

[loadEconomySorted]
SQL1_1 = SELECT resource, sellprice, selled, min_sellprice, max_sellprice, priceFactor, sector FROM economyv2 ORDER BY selled DESC;
OUTPUT = 1-STRING,2,3,4,5,6,7-STRING

[updateEconomyLockStatus]
SQL1_1 = UPDATE economyv2 SET locked_until = DATE_ADD(NOW(), INTERVAL ? MINUTE), selled = 0 where resource = ?;
SQL1_INPUTS = 1,2

[dropDirectEconomyLockStatus]
SQL1_1 = UPDATE economyv2 SET locked_until = NULL where resource = ?;
SQL1_INPUTS = 1

[dropEconomyLockStatus]
SQL1_1 = UPDATE economyv2 SET locked_until = NULL WHERE locked_until < DATE_SUB(NOW(), INTERVAL 1 SECOND)

[updateEconomySelled]
SQL1_1 = UPDATE economyv2 SET selled = ? where resource = ?;
SQL1_INPUTS = 1,2

[updateEconomyPrice]
SQL1_1 = UPDATE economyv2 SET lastprice = sellprice, sellprice = ? where resource = ?;
SQL1_INPUTS = 1,2

[updateEconomyPriceAndResetSelled]
SQL1_1 = UPDATE economyv2 SET lastprice = sellprice, sellprice = ?, selled = 0 where resource = ?;
SQL1_INPUTS = 1,2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;  Achievement
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[achievementsSave]
SQL1_1 = UPDATE players SET achievments = ? where playerid = ?;
SQL1_INPUTS = 1,2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;  Companies
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[auctionLoadAllData]
SQL1_1 = select id, uid, sellername, classname, type, startprice, step, position, finish_time, insert_time from auction_items;
OUTPUT = 1,2-STRING,3-STRING,4-STRING,5-STRING,6,7,8,9,10

[auctionLoadBets]
SQL1_1 = select id, bet, pid, insert_time from auction_bets where aId = ?
SQL1_INPUTS = 1
OUTPUT = 1,2,3,4

[auctionInsertItem]
SQL1_1 = insert into auction_items
SQL1_2 = (uid, sellername, classname, type, startprice, step, position, finish_time, insert_time)
SQL1_3 = VALUES
SQL1_4 = (?, ?, ?, ?, ?, ?, ?, DATE_ADD(NOW(), INTERVAL ? DAY), NOW())
SQL1_INPUTS = 1,2,3,4,5,6,7,8
Return InsertID = true

[auctionInsertBet]
SQL1_1 = insert into auction_bets
SQL1_2 = (aId, bet, pid, insert_time)
SQL1_3 = VALUES
SQL1_4 = (?,?,?,NOW())
SQL1_INPUTS = 1,2,3
Return InsertID = true

[auctionDeleteItem]
SQL1_1 = delete from auction_items where id = ?;
SQL1_INPUTS = 1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;  Companies
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[ltdsRegistration]
SQL1_1 = insert into ltds set owner = ?, name = ?, bank = 0, insert_time = NOW();
SQL1_INPUTS = 1,2
Return InsertID = true

[ltdsRename]
SQL1_1 = update ltds set name = ? where id = ?;
SQL1_INPUTS = 1,2

[ltdsUpdateBank]
SQL1_1 = update ltds set bank = ? where id = ?;
SQL1_INPUTS = 1,2

[ltdsRemoveManager]
SQL1_1 = update players set ltd_id = null where playerid = ?;
SQL1_INPUTS = 1

[ltdsSetManager]
SQL1_1 = update players set ltd_id = ? where playerid = ?;
SQL1_INPUTS = 1,2

[ltdsAbolish]

[ltdsNewLeader]
SQL1_1 = update ltds set owner = ? where id = ?;
SQL1_INPUTS = 1,2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;  Companies Stores
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


[ltdsStoreRename]
SQL1_1 = UPDATE ltds_object SET name = ? WHERE id = ?
SQL1_INPUTS = 1,2

[ltdsStorePay]
SQL1_1 = UPDATE ltds_object SET payed_untill = DATE_ADD(payed_untill, INTERVAL 30 DAY) WHERE id = ?
SQL1_INPUTS = 1

[ltdsStoreUpgrade]
SQL1_1 = UPDATE ltds_object SET max_items = max_items + '5' WHERE id = ?
SQL1_INPUTS = 1

[ltdsStoreDiscount]
SQL1_1 = UPDATE ltds_object SET discount = ?, discount_untill = DATE_ADD(NOW(), INTERVAL ? DAY) WHERE id = ?
SQL1_INPUTS = 1,2,3

[ltdsStoreTax]
SQL1_1 = UPDATE ltds_object SET tax = ? WHERE id = ?
SQL1_INPUTS = 1,2

[ltdsStoreMode]
SQL1_1 = UPDATE ltds_object SET mode = ? WHERE id = ?
SQL1_INPUTS = 1-bool,2

[ltdsStoreActive]
SQL1_1 = UPDATE ltds_object SET active = ? WHERE id = ?
SQL1_INPUTS = 1-bool,2

[ltdsStoreLoad]
SQL1_1 = SELECT name, tax, ltd_id, active, max_items, object, position, vector_dir, vector_up, payed_untill, discount, discount_untill, mode, blacklist, deleted_at
SQL1_2 = from ltds_object where id = ?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2,3,4-bool,5,6-STRING,7,8,9,10,11,12,13-bool,14,15

;; ;; ;; ;; ;; ;; ;; ;; ;; ;; ;; ;; ;; ;; ;; ;; ;; ;;
;; ;; ;;  Player Registration and loading

[hasPlayerSettings]
SQL1_1 = SELECT CASE WHEN EXISTS(SELECT uid FROM player_settings WHERE uid = ?) THEN 'true' ELSE 'false' END
SQL1_INPUTS = 1
OUTPUT = 1

[loadPlayerSettings]
SQL1_1 = SELECT * from player_settings where uid = ?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING, 2, 3-STRING, 4-STRING, 5-STRING, 6-STRING, 7-STRING, 8-bool, 9-bool, 10, 11, 12-bool, 13

[insertPlayerSettings]
SQL1_1 = INSERT INTO player_settings (uid) VALUES (?)
SQL1_INPUTS = 1

[updatePlayerSettings]
Prepared Statement = false
SQL1_1 = UPDATE player_settings SET $CUSTOM_1$ = "$CUSTOM_2$" WHERE uid = "$CUSTOM_3$"
SQL1_INPUTS = 1-mysql_escape,2-mysql_escape,3-mysql_escape

[updatePerkStats]
SQL1_1 = UPDATE players SET level = ?, xp = ?, prestige = ?, perks = ? WHERE playerid = ?;
SQL1_INPUTS = 1,2,3,4,5

[loadPlayer]
SQL1_1 = SELECT
SQL1_2 =    JSON_ARRAY(
SQL1_3 =        uid, name, first_name, last_name, nick_name, cash, bankacc, dcash, EPoint, trx, garage_slots, age, ltd_id,
SQL1_4 =        group_id, group_level, side, adminlevel,
SQL1_5 =        donorlevel, accessory, face, jail_coin, jail_time, 
SQL1_6 =        prestige, xp, level, total_time
SQL1_7 =  ),
SQL1_8 =  profs, achievments, perks, arrested, slave FROM players WHERE playerid=?
SQL1_INPUTS = 1
OUTPUT = 1,2,3,4,5-bool,6-bool

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;			Groups
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[registerGroup]
SQL1_1 = INSERT INTO groups SET
SQL1_2 = name = ?,
SQL1_3 = creator = ?,
SQL1_4 = leader = ?,
SQL1_5 = deputys = '[]',
SQL1_6 = slots = ?,
SQL1_7 = premial_var = ?,
SQL1_8 = titles = ?,
SQL1_9 = tfar = ?,
SQL1_10 = bank = '0',
SQL1_11 = massage_day = '[]',
SQL1_12 = created_at = NOW()
SQL1_INPUTS = 1,2,2,3,4,5,6
Return InsertID = true

[loadGroupPage]
SQL1_1 = SELECT id FROM groups LIMIT ?,?;
SQL1_INPUTS = 1,2
OUTPUT = 1

[loadGroupInfo]
SQL1_1 = SELECT name, leader, deputys, slots, premial_var, titles, tfar, bank, massage_day, side, taxes, salary,
SQL1_2 = case   when groups.rental_date is null then 'true'
SQL1_3 =     when groups.rental_date > (DATE_ADD(NOW(),INTERVAL 1 MINUTE))
SQL1_4 =     then 'true' else 'false' end
SQL1_5 = FROM groups WHERE id = ?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2-STRING,3,4,5-STRING,6,7,8,9,10-STRING,11,12,13

[loadGroupMembers]
SQL1_1 = SELECT playerid, CONCAT(first_name,' ',last_name), group_level FROM players WHERE group_id = ?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2-STRING,3

[addMarker]
SQL1_1 = INSERT INTO groups_map_marker SET group_id = ?, markerType = 0, positionArr = ?, color = ?, icon = ?, iconSize = ?, label = ?, labelSize = ?;
SQL1_INPUTS = 1,2,3,4,5,6,7
Return InsertID = true

[updateGroupTaxes]
SQL1_1 = UPDATE groups SET taxes = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[getDeputys]
SQL1_1 = SELECT deputys FROM groups WHERE id = ?
SQL1_INPUTS = 1
OUTPUT = 1

[addPoly]
SQL1_1 = INSERT INTO groups_map_marker SET group_id = ?, markerType = 1, positionArr = ?, color = ?;
SQL1_INPUTS = 1,2,3
Return InsertID = true

[deleteMarker]
SQL1_1 = DELETE FROM groups_map_marker WHERE id = ?;
SQL1_INPUTS = 1

[updateDayText]
SQL1_1 = UPDATE groups SET massage_day = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[deleteAllMarker]
SQL1_1 = DELETE FROM groups_map_marker WHERE group_id = ?;
SQL1_INPUTS = 1

[loadGroupMarkers]
SQL1_1 = SELECT id,markerType,positionArr,color,icon,iconSize,label,labelSize FROM groups_map_marker WHERE group_id = ?;
SQL1_INPUTS = 1
OUTPUT = 1,2,3,4,5-STRING,6,7-STRING,8

[updateGroupTitles]
SQL1_1 = UPDATE groups SET titles = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[updateGroupSalary]
SQL1_1 = UPDATE groups SET salary = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[updateTfarSettings]
SQL1_1 = UPDATE groups SET tfar = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[updateLeader]
SQL1_1 = UPDATE groups SET leader = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[updateDeputy]
SQL1_1 = UPDATE groups SET deputys = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[setPlayerGroupLink]
SQL1_1 = UPDATE players SET group_id = ?, group_level = '1' WHERE playerid = ?;
SQL1_INPUTS = 1,2

[kickPlayerGroupLink]
SQL1_1 = UPDATE players SET group_id = -1, group_level = '1' WHERE playerid = ?;
SQL1_INPUTS = 1

[setAllyGroup]
SQL1_1 = UPDATE groups SET ally = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[setGroupBank]
SQL1_1 = UPDATE groups SET bank = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[updateGroupSlots]
SQL1_1 = UPDATE groups SET slots = ? WHERE id = ?;
SQL1_INPUTS = 1,2

[updateRank]
SQL1_1 = UPDATE players SET group_level = ? WHERE playerid = ?;
SQL1_INPUTS = 1,2

[disbandGroup]
SQL1_1 = DELETE FROM groups WHERE id = ?;
SQL1_INPUTS = 1
SQL2_1 = DELETE FROM groups_map_marker WHERE group_id = ?;
SQL2_INPUTS = 1
SQL3_1 = UPDATE players SET group_id = -1, group_level = 1 WHERE group_id = ?;
SQL3_INPUTS = 1

[updateSide]
SQL1_1 = UPDATE players SET side = ? WHERE playerid = ?
SQL1_INPUTS = 1,2

[logsGroups]
SQL1_1 = INSERT INTO groups_logs (group_id,type,uid_caller,log,timestamp) VALUES (?,?,?,?,NOW())
SQL1_INPUTS = 1,2,3,4

[groupNameExists]
SQL1_1 = SELECT id FROM groups WHERE name = ?
SQL1_INPUTS = 1
OUTPUT = 1-STRING

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;			Group Territories
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[insertGroupTerritories]
SQL1_1 = INSERT INTO groups_territories (name, group_id, color, flag_position, radius, borders, polygons, phase, tax, last_capture, type) VALUES (?,-1,?,?,?,?,?,?,?,NULL,?)
SQL1_INPUTS = 1,2,3,4,5,6,7,8,9

[loadTerritory]
SQL1_1 = SELECT id, name, group_id, color, flag_texture, flag_position, radius, borders, polygons, phase, tax, last_capture FROM groups_territories WHERE id = ?
SQL1_INPUTS = 1
OUTPUT = 1,2-STRING,3,4,5-STRING,6,7,8,9,10,11,12

[loadTerritoriesPage]
SQL1_1 = SELECT id FROM groups_territories LIMIT ?,?
SQL1_INPUTS = 1,2
OUTPUT = 1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;			Garages
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[getGarageVehicles]
SQL1_1 = SELECT id,
SQL1_2 = classname, color, spname, tuning_data, insure, baseprice, material, fuel, parking, plate, distance, damage, ROUND(((JSON_EXTRACT(inventory,'$[1]') / vehicles.maxslots) * 100))
SQL1_3 = from vehicles where pid = ? AND type=? AND alive = 1 AND active = 0 and (deleted_at is null or insure = 2)
SQL1_INPUTS = 1,2
OUTPUT = 1,2-STRING,3-STRING,4-STRING,5,6,7,8-STRING,9,10,11-STRING,12,13,14

[getGarageVehicle]
SQL1_1 = SELECT classname, pid, alive, active, insure, plate, color, material, inventory, gear, fuel, damage, hitpoints, tuning_data, spname, baseprice, distance FROM vehicles WHERE id = ? and deleted_at is null
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2-STRING,3,4,5,6-STRING,7-STRING,8-STRING,9,10,11,12,13,14,15-STRING,16,17

[getGarageVehiclesParking]
SQL1_1 = SELECT id,
SQL1_2 = classname, parking, plate
SQL1_3 = from vehicles where pid = ? AND alive='1' AND active='0' AND parking <> '[]' and deleted_at is null
SQL1_INPUTS = 1
OUTPUT = 1,2-STRING,3,4-STRING

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;; RESCAPTURE ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[loadingCaptures]
SQL1_1 = SELECT proc, owner FROM resource_capture WHERE active = 1 and owner <> -1
OUTPUT = 1-STRING,2

[loadingAllCaptures]
SQL1_1 = SELECT proc, procName, owner,(select groups.name from `groups` where groups.id = resource_capture.owner), earned, applicants, nextBattle, captured FROM resource_capture WHERE active='1' ORDER BY proc ASC
OUTPUT = 1-STRING,2-STRING,3,4-STRING,5,6,7,8

[manageCaptures]
SQL1_1 = UPDATE resource_capture SET applicants = ? WHERE proc = ?
SQL1_INPUTS = 1,2

[endBattle]
SQL1_1 = UPDATE resource_capture SET earned = '0', owner = ?, applicants = ?, nextBattle = DATE_ADD(nextBattle, INTERVAL 7 DAY) WHERE proc = ?
SQL1_INPUTS = 1,2,3

[updateCapturesBalance]
SQL1_1 = UPDATE resource_capture SET earned = earned + ? WHERE proc = ?
SQL1_INPUTS = 1,2

[updateGangBankOnline]
SQL1_1 = UPDATE resource_capture SET earned = earned + ? WHERE proc = ?
SQL1_INPUTS = 1,2



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;; CHAR CREATE ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[char_findRetriesNames]
SQL1_1 = SELECT uid FROM players WHERE name IN (SELECT name FROM players GROUP BY name HAVING COUNT(*) > 1) ORDER BY name
OUTPUT = 1

[char_setNewName]
SQL1_1 = UPDATE players SET name = ? WHERE playerid = ?
SQL1_INPUTS = 1,2

[char_findRetrieName]
SQL1_1 = SELECT uid FROM players WHERE name = ?
SQL1_INPUTS = 1
OUTPUT = 1

[char_setNewPlayer]
SQL1_1 = UPDATE players SET name = ?, first_name = ?, last_name = ?, nick_name = ?, age= ?, face = ?, accessory = ? WHERE playerid = ?;
SQL1_INPUTS = 1,2,3,4,5,6,7,8

[char_insertCodePlayer]
SQL1_1 = INSERT INTO applycated_codes SET uid = ?, code = ?, insert_time = NOW();
SQL1_INPUTS = 1,2

[char_checkName]
SQL1_1 = SELECT CASE WHEN (SELECT uid FROM players WHERE first_name = ? and last_name = ?) THEN 'true' ELSE 'false' END
SQL1_INPUTS = 1,2
OUTPUT = 1

[char_checkNickName]
SQL1_1 = SELECT CASE WHEN (SELECT uid FROM players WHERE nick_name = ?) THEN 'true' ELSE 'false' END
SQL1_INPUTS = 1
OUTPUT = 1

[char_checkCode]
SQL1_1 = SELECT CASE WHEN (SELECT uid FROM players WHERE uid = ?) THEN 'true' ELSE 'false' END
SQL1_INPUTS = 1
OUTPUT = 1

[char_isConfirmed]
SQL1_1 = SELECT confirmed FROM players WHERE playerid = ?
SQL1_INPUTS = 1
OUTPUT = 1

[char_confirm]
SQL1_1 = UPDATE players SET confirmed = 1 WHERE playerid = ?
SQL1_INPUTS = 1

[char_getName]
SQL1_1 = SELECT first_name, last_name FROM players WHERE playerid = ?
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2-STRING

[char_setDefNames]
SQL1_1 = SELECT SUBSTRING_INDEX(name, ' ', 1), SUBSTRING_INDEX(name, ' ', -1) FROM players

[updatePlayerTime]
SQL1_1 = UPDATE players SET total_time = total_time + 1 WHERE playerid = ?
SQL1_INPUTS = 1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;; CHAR CREATE ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


[initWeaponStorages]
SQL1_1 = SELECT * FROM weapon_storage
OUTPUT = 1,2,3-STRING,4-STRING,5-STRING,6-STRING,7-STRING,8-STRING,9-STRING

[getToolBoxsArray]
SQL1_1 = SELECT toolboxs FROM weapon_storage
OUTPUT = 1-STRING

[getBalance]
SQL1_1 = SELECT balance FROM weapon_storage
OUTPUT = 1

[updateBalance]
SQL1_1 = UPDATE weapon_storage SET balance = balance + ?
SQL1_INPUTS = 1

[update]
Prepared Statement = false
SQL1_1 = UPDATE $CUSTOM_1$
SQL1_INPUTS = 1

[delete]
Prepared Statement = false
SQL1_1 = DELETE FROM $CUSTOM_1$
SQL1_INPUTS = 1

[insert]
Prepared Statement = false
SQL1_1 = INSERT INTO $CUSTOM_1$
SQL1_INPUTS = 1

[insertKillLog]
SQL1_1 = INSERT INTO kill_logs SET uid = ?, weapon = ?, log = ?, time = NOW()
SQL1_INPUTS = 1,2,3

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;; REWARDS ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[hasRewardsPlayer]
SQL1_1 = SELECT CASE WHEN EXISTS(SELECT uid FROM rewards WHERE uid = ?) THEN 'true' ELSE 'false' END
SQL1_INPUTS = 1
OUTPUT = 1

[loadRewards]
SQL1_1 = SELECT rewards_player FROM rewards WHERE uid = ?
SQL1_INPUTS = 1
OUTPUT = 1

[createRewards]
SQL1_1 = INSERT INTO rewards SET uid = ?, rewards_player = ?
SQL1_INPUTS = 1,2

[setPlayerRewards]
SQL1_1 = UPDATE rewards SET rewards_player = ? WHERE uid = ?
SQL1_INPUTS = 1,2

[addVip]
SQL1_1 = UPDATE players SET donorlevel = ?, donat_time = DATE_ADD(NOW(),INTERVAL ? DAY) WHERE playerid = ?
SQL1_INPUTS = 1,2,3

[addDayVip]
SQL1_1 = UPDATE players SET donat_time = DATE_ADD(donat_time,INTERVAL ? DAY) WHERE playerid = ?
SQL1_INPUTS = 1,2

[insertRewardLog]
SQL1_1 = INSERT INTO rewards_log SET uid = ?, reward = ?, rewarded = ?, amount = ?, date = NOW()
SQL1_INPUTS = 1,2,3,4


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;; Daily Gifts ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[setRewardDay]
SQL1_1 = UPDATE players SET reward_days = ?, reward_stamp = NOW() WHERE playerid = ?
SQL1_INPUTS = 1,2

[getRewardDays]
SQL1_1 = SELECT DATEDIFF(NOW(), reward_stamp) as reward_diff, reward_days FROM players WHERE playerid = ?
SQL1_INPUTS = 1
OUTPUT = 1
